/*
    File: index.css
    Jason Downing
    Contact: jason@downing.io
    MIT Licensed - see http://opensource.org/licenses/MIT for details.
    Anyone may freely use this code. Just don't sue me if it breaks stuff.
    Created: September 3rd, 2015.
    Last Updated: June 16, 2017.

    This file contains CSS classes / IDs used to override the Creative Bootstrap Theme

    Some of this is used in the jasond94.github.io repo, while some of it is specifically for the Spotify-Play-Button
    repository.
*/

.text-small {
  font-size: 100%;
}

/*
      Since the iframe Spotify playlists weren't being centered, I found some CSS that will make them centered:
      https://stackoverflow.com/questions/8366957/how-to-center-an-iframe-horizontally

      Turns out you really just need to use text-align: center, or make it display: block; I also added some padding
      to the bottom for when the screen size gets smaller.

      I am also testing out making the iframes fluid / responsive using these links:
      https://developer.spotify.com/technologies/widgets/adding-widgets-to-websites/
      http://embedresponsively.com/
      https://jsfiddle.net/JMPerez/qa73L/
 */
.spotify-center {
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  max-width: 100%;
  height: auto;
}
  .spotify-center iframe,
  .spotify-center object,
  .spotify-center embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

/*  For the GitHub Section link
    These styles make the GitHub Section header appear white all the time,
    unless hovered on, in which case they turn blue. I like this style better.

    I also decided to use borders instead of underlines since the J in Jason gets cut
    off by an underline, but not by a border (which looks exactly like an underline only
    I can control it better). This resulted in a MUCH nicer looking underline!
    I used this link from Stackoverflow for this:
    https://stackoverflow.com/questions/9586596/control-underline-position-on-text-decoration-underline

    These links were also helpful:
    https://www.w3schools.com/css/css_link.asp
    https://www.w3schools.com/css/tryit.asp?filename=trycss_link2
*/
.text-blue {
  color: blue;
  border-bottom: 1px solid currentColor;
}
.text-white {
  color: white;
  border-bottom: 1px solid currentColor;
}

/* Link color when it is unvisited */
a.text-blue:link  {
  color: blue;
  border-bottom: 1px solid currentColor;
}
a.text-white:link  {
  color: white;
  border-bottom: 1px solid currentColor;
}

/* Link color after being clicked on and visited */
a.text-blue:visited {
  color: blue;
  border-bottom: 1px solid currentColor;
}
a.text-white:visited {
  color: white;
  border-bottom: 1px solid currentColor;
}

/* Link color while being hovered on */
a.text-blue:hover {
  color: blue;
  border-bottom: 1px solid currentColor;
  text-decoration: none;
}
a.text-white:hover {
  color: blue;
  border-bottom: 1px solid currentColor;
  text-decoration: none;
}

/* Link color the moment it is clicked */
a.text-blue:active {
  color: blue;
  border-bottom: 1px solid currentColor;
}
a.text-white:active {
  color: white;
  border-bottom: 1px solid currentColor;
}

.min-padding {
  padding-top: 2em;
  padding-bottom: 2em;
}

.min-padding-top {
  padding-top: 2em;
  padding-bottom: 0em;
}

/*
    This class is a fix for a bug I noticed on certain screen resolutions.
    When the width was between ~768px and ~991px (small devices) I noticed that
    the 2x2 rows were not looking right - the first row of 2 squares looked fine
    but the the next row was all messed up, one square was higher than the other.

    It turns out if 2 or 3 squares share the same height but one square doesn't,
    then the alignment is thrown off on the grid.

    This small padding increase fixes the issue by making all 4 squares the same
    height.
*/
.div-padding-fix {
  padding-bottom: 2em;
}
